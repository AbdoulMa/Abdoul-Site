[
  {
    "path": "posts/2021-08-17-treemap/",
    "title": "Tired of Pie Charts !? Let's make a Tree Map.",
    "description": "Tree maps are useful alternatives for the presentation of proportions.",
    "author": [
      {
        "name": "Abdoul ISSA BIDA",
        "url": {}
      }
    ],
    "date": "2021-08-17",
    "categories": [
      "R",
      "Tidyverse",
      "Tree Map"
    ],
    "contents": "\nData Reading\nFor this first blog post, we are going to use Tidytuesday(Mock 2021) Week 34 Dataset.\nThe data comes from SpeechInteraction.org and was shared by Sara Stoudt.\nIt is the records of Star Trek characters interactions with Voice User Interfaces(VUIs) such as Apple Siri, Google Assistant, Amazon Alexa.\nA complete description of the dataset is available at : https://github.com/rfordatascience/tidytuesday/tree/master/data/2021/2021-08-17.\nFirst of all, let‚Äôs import tidyverse package :\n\n\nlibrary(tidyverse) # Import ggplot2 and friends for data wrangling \n\n\n\nSecondly, let‚Äôs read the data :\n\n\ncomputer <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-08-17/computer.csv')\n\n\n\nHere is what the data looks like.\n\n\nhead(computer, 2)\n\n\n\n\n\n\nname\n\n\nchar\n\n\nline\n\n\ndirection\n\n\ntype\n\n\npri_type\n\n\ndomain\n\n\nsub_domain\n\n\nnv_resp\n\n\ninteraction\n\n\nchar_type\n\n\nis_fed\n\n\nerror\n\n\nvalue_id\n\n\n102\n\n\nTasha\n\n\nBattle bridge.\n\n\nThe doors snap closed and the lift moves. Riker looks Tasha over waiting then:\n\n\nStatement\n\n\nStatement\n\n\nIoT\n\n\nTurbolift\n\n\nTRUE\n\n\nBattle bridge.\n\n\nPerson\n\n\nTRUE\n\n\nFALSE\n\n\n255\n\n\n102\n\n\nBeverly\n\n\nShow me the results of Captain Picard‚Äôs most recent physical examination.\n\n\nThe screen promptly BEGINS TO FLASH UP PRINTED INFORMATION followed by X-Ray type shots etc. Beverly studies it for awhile.\n\n\nCommand\n\n\nCommand\n\n\nInfoSeek\n\n\nNA\n\n\nTRUE\n\n\nShow me the results of Captain Picard‚Äôs most recent physical examination.\n\n\nPerson\n\n\nTRUE\n\n\nFALSE\n\n\n345\n\n\n\nData Wrangling\nWe won‚Äôt spend a lot of time wrangling data to try to bring out some specific pattern. We are going to simply count the characters which interact the more with VUIs.\n\n\ncharacters <- computer %>% \n  count(char, sort= T) %>%   \n  # Categorize  the  characters that will be useful for our visualization\n  mutate(char = factor(char)) \n\n\n\nLet‚Äôs look at, the 6 characters which interact the most with VUIs.\n\n\nhead(characters)\n\n\n\n\n\nchar\n\n\nn\n\n\nComputer Voice\n\n\n598\n\n\nGeordi\n\n\n320\n\n\nPicard\n\n\n266\n\n\nData\n\n\n235\n\n\nRiker\n\n\n150\n\n\nBeverly\n\n\n121\n\n\nThe results are logical because Geordi is an engineer in The Star Trek Saga.\nGraphic\nFor this section, we need to import some extra libraries:\ntreemapify(Wilkins 2021)\npaletteer(file. 2021)\nggtext\nragg\n\n\nlibrary(treemapify) # For geom_treemap and friends\nlibrary(paletteer) # For color palette \nlibrary(ggtext) # For customize text (used in this script with element_markdown)\nlibrary(ragg) # For the device for save the plot\n\n\n\nSo why a Tree Map, instead of a Pie chart for proportions Visualization?\nPie charts are generally really cool to look at. But in some cases, like ours, there is too many individual data, and they are so close in magnitude that the message that we try to spread with a pie chart is biased.\nIn those cases, I use Tree Maps, which are pretty useful for the presentation of proportions.\n\nA tree map shows the attribute of a cardinally scaled variable as nested rectangles. The size and order of the rectangles are calculated so that, with preset outer dimensions, the large rectangle is completely filled and the areas of the individual rectangles correspond to the size of the variables.(Rahlf 2017)\n\n\ncharacters %>%\n  ggplot(aes(fill = char,area = n)) + \n  geom_treemap(color = \"black\", size = 1) + \n  # We won't use legends because we 'ill annotate each square \n  # with the character name and the number of times it interacted \n  theme(legend.position = \"none\") \n\n\n\n\nAt this step, we just mapped, each area with the number of interactions of a character and filled the area with the character.\nNext step, let‚Äôs annotate each area with the name of the matching character using the function geom_treemap_text of treemapify package.\nThis function takes several arguments especially:\nfamily for the font family\nfontface for the font face\ncolour for the font color\nplace for the place inside the box where the text is placed.\ngrow which is is very important, because if TRUE, the text will be grown as well as shrunk to fill the box.\n\n\ncharacters %>%\n  # Add in the mapping, label\n  ggplot(aes(fill = char,area = n,label = glue::glue(\" {char} \\n ({n})\"))) + \n  geom_treemap(color = \"black\", size = 1) + \n  geom_treemap_text(family = \"Lato Black\",fontface = \"italic\",\n                    colour = \"white\", place = \"centre\",\n                    grow = TRUE) + \n  theme(legend.position = \"none\") \n\n\n\n\nIt began to look pretty good, but let‚Äôs customize it a little bit.\nFor that, I will fill the areas with a different color palette. The challenge would be to find a color palette with more 25 colors.\nFortunately for us, colorRampPalette() R function provide a tools to interpolate a set of given colors to create new color palettes.\nC√©dric Scherer published a trick about that.\n\n\n\n\n{\"x\":{\"twid\":\"1426157378454556672\",\"pars\":{\"align\":\"center\"}},\"evals\":[],\"jsHooks\":[]}\n\n\n\nLet‚Äôs use it. For color palette, I choose Prism from rcartoclor package. We can also access this palette within paletteer package.\n\n\npaletteer_d(\"rcartocolor::Prism\",12) %>% \n  # We visualize the colors with show_col from scales pkg \n  scales::show_col()\n\n\n\n\nNow, we extend it.\n\n\nextended_palette <- colorRampPalette(paletteer_d(\"rcartocolor::Prism\",12)) \n# Let's visualize 40 interpolated colors et\nextended_palette(49) %>% \n  scales::show_col(cex_label = .55, ncol = 7)\n\n\n\n\nFinally we can use it, and set a little bit more the theme.\n\n\nplot <- characters %>%\n  ggplot(aes(fill = char,area = n, label = glue::glue(\" {char} \\n ({n})\"))) + \n  geom_treemap(color = \"black\", size = 1) + \n  geom_treemap_text(family = \"Lato Black\",fontface = \"italic\", colour = \"white\", place = \"centre\",\n                    grow = TRUE) + \n  labs(title = \"Which characters interact the most with VUIs\\n in the Star Trek Saga?\",\n       caption = \"Data from ***SpeechInteraction.com*** and shared by Sara Stoudt.<br/>\n       Tidytuesday Week-34 2021.\") + \n  scale_fill_manual(values = extended_palette(nrow(characters))) + \n  theme(text =element_text(family = \"Lato\"),\n        plot.background = element_rect(fill = \"grey95\"),\n        panel.spacing = unit(2.5, units = \"cm\"),\n        plot.title = element_text(family = \"Lato Black\",size = rel(2.5), hjust = .5, margin = margin(t = 15,b = 10)),\n        plot.caption = element_markdown(color = \"black\", size = rel(1.2), margin = margin(t = 20,b = 10)),\n        legend.position = \"none\"\n  )\n\n\n\n\n\n\n\nEt voil√†!\n\n\n\n\nfile., See AUTHORS. 2021. Paletteer: Comprehensive Collection of Color Palettes. https://CRAN.R-project.org/package=paletteer.\n\n\nMock, Thomas. 2021. ‚ÄúTidy Tuesday: A Weekly Data Project Aimed at the r Ecosystem.‚Äù https://github.com/rfordatascience/tidytuesday.\n\n\nRahlf, Thomas. 2017. Data Visualisation with r 100 Examples.\n\n\nWilkins, David. 2021. Treemapify: Draw Treemaps in ‚ÄôGgplot2‚Äô. https://CRAN.R-project.org/package=treemapify.\n\n\n\n\n",
    "preview": "posts/2021-08-17-treemap/preview.png",
    "last_modified": "2021-08-19T21:32:59+02:00",
    "input_file": "treemap.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Blog",
    "description": {},
    "author": [
      {
        "name": "Abdoul ISSA BIDA",
        "url": "https://abdoulblog.netlify.app"
      }
    ],
    "date": "2021-06-18",
    "categories": [
      "R",
      "Python"
    ],
    "contents": "\nI started learning R a couple months ago, because I spend a lot time on Twitter and was always amazed by all the great graphics made with this statistical programming language. First of all, I followed essentially some great sport Data Analysts like Owen Phillips who post great charts about NBA Players & Community Stats.\n\n\nSome Owen‚Äôs Tweets\n\n\n\n\n{\"x\":{\"twid\":\"1377974728233734148\",\"pars\":{\"align\":\"center\"}},\"evals\":[],\"jsHooks\":[]}\n\n\n\n\n\n{\"x\":{\"twid\":\"1405137683467456513\",\"pars\":{\"align\":\"center\"}},\"evals\":[],\"jsHooks\":[]}\n\n\n‚Äì Owen Pihllips(@owenlhjphillips)\n\n\nAnd as things progress, I started following more and more people from R Community and particularly those who contribute to the Tidytuesday weekly Data Visualization Challenge.\nAs, my passion keeps growing, I started learning R typically with short tutorial like those amazing ones from C√©dric Scherer or Thomas Mock but also with some bookdown particularly the bible for the beginners and the aspiring data scientists R for Data Science (Wickham and Grolemund 2017).\nOn May 5, 2020, I made my first contribution for the Tidytuesday Challenge. I wasn‚Äôt expecting a lot of likes but what happened was just magical.\n\nThe dataset was about Water Acces Points and come from WPDX. My analysis of the data wasn‚Äôt the adequate one and my lines plot was even less, but my intention was principally to give birth to a presentable plot with my beginner knowledge.\n\n\n{\"x\":{\"twid\":\"1389976276765716488\",\"pars\":{\"align\":\"center\"}},\"evals\":[],\"jsHooks\":[]}\n‚Äì Abdoul Madjid(@issa_madjid)\n\n I received a ton of compliments and advices for that meme lines plot, what acted like a boost for my little ego üòÖ. So from that initial post, I have decided, despite my professional life schedule:\nto be a weekly contributor to the TidyTuesday Challenge\nto try to progress from the feedback I received from the Community\nand to build a blog with {distill} which is used to build scientific and technical writing and native blog with R Markdown\n\nSo Here, We go.\n\nAcknowledgement\nA big thank to all the amazing contributors to the R community.\n\n\n\nWickham, Hadley, and Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 1st ed. Paperback; O‚ÄôReilly Media. http://r4ds.had.co.nz/.\n\n\n\n\n",
    "preview": "posts/welcome/preview.png",
    "last_modified": "2021-08-08T19:53:54+02:00",
    "input_file": {}
  }
]
